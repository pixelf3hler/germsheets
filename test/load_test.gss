<?gss
   $green = #7eef48;
   $black = #000000;
   $iteratorBlock = `box-shadow: 0px 8px [i]px #000000; overflow: hidden`;
   
   ~roundCorners($radius) {
      border-radius: $radius;
   }
   
   %%
   body { margin: 0; padding: 0; width: 100%; height: 100%; font-size: 100%; font-family: sans-serif; }
   p { color: #333; }
   %%
   
   //line comment test
   
   //+unroll(test,class,2,6,$iteratorBlock);
   
   +paragraphs(16,32,"Source Code Pro");
   
   .box {
      width: 400px;
      position: absolute;
      left: <(Math.round(Math.random() * 200) + 200)px;
      height: <(200 * 2)px;
      
   }
   
   #green_border {
      
      border: solid 1px $green;
      font-size: 12px;
      height: <(.box[width] / 2)px;// new element: inline expressions <(...) the css property accessor uses the syntax selector[styleDeclaration]
      width: 220px;
      line-height: <-recommendedLineHeight(12,220);
   }
   
   .light_green {
      background-color: <-randomColor();
      ~roundCorners(6px);
   }
   
   ul {
      list-style-type: none;
      
      /* nesting:
         you can either use the backtick-operator to enable the parsers 'inline-thru' mode for one-level deep nesting: */
         
      `.nested_rule { 
         display: none;
       }`
         
      /* ..or escape the closing braces of nested rules with exclamation marks representing the nested depth:  
         note that the inner rule has two trailing bangs
      */
      .childrule { 
         color: $black;
         font-family: consolas,monospace; 
         #second_level {
            color: #fff;
         }!!
      }!
   }
?>